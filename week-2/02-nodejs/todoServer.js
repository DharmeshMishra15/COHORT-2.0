/**
  You need to create an express HTTP server in Node.js which will handle the logic of a todo list app.
  - Don't use any database, just store all the data in an array to store the todo list data (in-memory)
  - Hard todo: Try to save responses in files, so that even if u exit the app and run it again, the data remains (similar to databases)

  Each todo has a title and a description. The title is a string and the description is a string.
  Each todo should also get an unique autogenerated id every time it is created
  The expected API endpoints are defined below,
  1.GET /todos - Retrieve all todo items
    Description: Returns a list of all todo items.
    Response: 200 OK with an array of todo items in JSON format.
    Example: GET http://localhost:3000/todos
    
  2.GET /todos/:id - Retrieve a specific todo item by ID
    Description: Returns a specific todo item identified by its ID.
    Response: 200 OK with the todo item in JSON format if found, or 404 Not Found if not found.
    Example: GET http://localhost:3000/todos/123
    
  3. POST /todos - Create a new todo item
    Description: Creates a new todo item.
    Request Body: JSON object representing the todo item.
    Response: 201 Created with the ID of the created todo item in JSON format. eg: {id: 1}
    Example: POST http://localhost:3000/todos
    Request Body: { "title": "Buy groceries", "completed": false, description: "I should buy groceries" }
    
  4. PUT /todos/:id - Update an existing todo item by ID
    Description: Updates an existing todo item identified by its ID.
    Request Body: JSON object representing the updated todo item.
    Response: 200 OK if the todo item was found and updated, or 404 Not Found if not found.
    Example: PUT http://localhost:3000/todos/123
    Request Body: { "title": "Buy groceries", "completed": true }
    
  5. DELETE /todos/:id - Delete a todo item by ID
    Description: Deletes a todo item identified by its ID.
    Response: 200 OK if the todo item was found and deleted, or 404 Not Found if not found.
    Example: DELETE http://localhost:3000/todos/123

    - For any other route not defined in the server return 404

  Testing the server - run `npm run test-todoServer` command in terminal
 */
  const express = require('express');
  const bodyParser = require('body-parser');
  
  const fs = require('fs');
  const path = require('path')
  const app = express();
  
  app.use(express.json());
  

  let arr = fs.readFileSync('todos.json','utf-8')
  
 
  app.get('/todos',(req,res)=>{
     
   let data = JSON.parse(arr);

   res.send(data);

  })

  app.get('/todos/:id',(req,res)=>{
    
    const id = req.params.id;

    let exists = false;
    let ans ;
    

    arr = JSON.parse(arr);

    console.log(arr);
    console.log(typeof(id))
    console.log(typeof(arr[0].id))
      

   for(let i=0;i<arr.length;i++)
   {
    
   if(arr[i].id === parseInt(id))
   {
   
    exists  = true;
    ans = arr[i];
   }
   }

   if(!exists)
  {
   res.send('404 Not Found')
  }
   res.send(ans);
       

  })

  app.post('/todos',(req,res)=>{
      
   
    arr = JSON.parse(arr);

    let id = arr.length+1;
    let title = req.body.title;
    let completed = req.body.completed;
    let description = req.body.description;
    
    arr.push({"id":id,"title":title,"completed":completed,"description":description});
    
    fs.writeFile('todos.json',JSON.stringify(arr),(err)=>{
      console.log(err);
    })

    res.json(id);
  })

  app.put('/todos/:id',(req,res)=>{
      const id = req.params.id;
      
    let exists = false;
    
    

    arr = JSON.parse(arr);

    console.log(arr);
    console.log(typeof(id))
    console.log(typeof(arr[0].id))
      

   for(let i=0;i<arr.length;i++)
   {
    
   if(arr[i].id == id)
   {
      exists = true;
      arr[i].completed = true;
      
   }
   }

   if(!exists)
  {
   res.send('404 Not Found')
  }
  else{
    fs.writeFile('todos.json',JSON.stringify(arr),(err)=>{
      console.log(err);
    })
    res.json("Updated");
  }
   
  })

  app.delete('/todos/:id',(req,res)=>{

    const id = req.params.id;

    let exists = false;
    
    

    arr = JSON.parse(arr);

    console.log(arr);
    console.log(typeof(id))
    console.log(typeof(arr[0].id))
      

   for(let i=0;i<arr.length;i++)
   {
    
   if(arr[i].id == id)
   {
      exists = true;
      break;
      
   }
   }

   if(!exists)
  {
   res.send('404 Not Found')
  }
  else{
   let ans = arr.filter(i => i.id != id)
    fs.writeFile('todos.json',JSON.stringify(ans),(err)=>{
      console.log(err);
    })
    res.json("Updated");
  }
  })

  app.listen(3001);
  
  module.exports = app;